/* Reuse*/

.paper {
	display: flex;
	border: var(--border-1);
	background-color: var(--color-surface-500);
	border-radius: 5px;
	padding: var(--space-s);
}

/* Top-level Layout */


/* Numbers layout */

.numbers {
	display: flex;
	flex-flow: column nowrap;
	gap: var(--space-m);
	max-width: 100%;
}

.number {
	display: flex;
	gap: var(--space-m);
	justify-content: flex-end;
  align-items: center;
	max-width: 100%;
}

.ranks {
	position: relative;

	max-width: 100%;
	display: flex;
	overflow-x: auto;
	scroll-snap-type: x mandatory;
	justify-self: end;
}

.ranks::before,
.ranks::after {
	--direction: 90deg;

	content: "";

	position: sticky;
	top: 0;
	padding: 0 var(--space-s);
	height: auto;
	background-image: linear-gradient(var(--direction), var(--color-surface-400), rgb(0 0 0 / 0.0001));
	pointer-events: none;

	z-index: 2;
}

.ranks::before {
	left: 0;
}

.ranks::after {
	--direction: 270deg;
	right: 0;
}

@media screen and (min-width: 500px) and (pointer: fine) {
	.ranks::-webkit-scrollbar-track {
		background-color: var(--color-surface-300);
	}
	
	.ranks::-webkit-scrollbar {
		height: 7.5px;
	}
	
	.ranks::-webkit-scrollbar-thumb {
		background-color: var(--color-surface-500);
	}
}

.number ol {
	position: relative;

	display: flex;
	gap: var(--space-s);
	height: 100%;
	padding: var(--space-xs) var(--space-m);
	padding-right: 0;
	scrollbar-gutter: stable;
}

.number ol::before {
	content: "";
	position: absolute;
	left: calc(2 * var(--space-m) + var(--space-s));
	top: 50%;
	background-color: hsl(var(--gray-h) var(--gray-s-600) var(--gray-l-600) / 0.5);
	width: calc(100% - 4 * var(--space-m) - 2 * var(--space-s));
	height: 1px;
	z-index: -1;
}

.rank {
	composes: paper;
	flex-direction: column;
	justify-content: space-between;
	gap: var(--space-s);
	color: var(--color-gray-800);

	transition: transform 0.25s;
	scroll-snap-align: center;
}

.rank button {
	font-size: 0.75em;
	border: none;
	color: var(--color-gray-700);
	border-radius: 50%;
	aspect-ratio: 1 / 1;
	min-width: 2ch;
}

.rank button:focus-visible,
.rank button:not(:disabled):hover {
	outline: 1px solid var(--color-accent);
}

.rank output {
	display: flex;
	place-content: center;
	width: 3ch;
	pointer-events: none;
}

/* Increment ranks */

.controls {
	--opacity-bg: 0.25;
	--opacity-border: 0.5;

	composes: paper;
	place-items: center;
	place-self: center;
	border: solid 1px hsl(var(--gray-h) var(--gray-s-600) var(--gray-l-600) / var(--opacity-border));
	background-color: hsl(var(--surface-h) var(--surface-s-500) var(--surface-l-500) / var(--opacity-bg));
	cursor: pointer;

	transition: opacity 0.35s, border-color 0.35s;
}

.controls:hover {
	--opacity-bg: 0.5;
	--opacity-border: 0.75;
}

.controls:focus-visible {
	--opacity-bg: 0.75;
	--opacity-border: 1;
}

.controls > svg {
	width: 1em;
	height: 1em;
	stroke: currentColor;
	color: var(--color-gray-800);
}

/* Radix indicator */

.number section[label="radix"] {
	position: relative;
}

.radix {
	composes: paper;

	place-content: center;
	place-self: center;
	background-color: var(--color-surface-300);
	font-size: var(--font-size-5);
	color: var(--color-gray-800);		
	width: 2em;
	height: 2em;
	aspect-ratio: 1 / 1;
}

.number:not(:last-child) .radix::after {
	font-size: inherit;
	content: "";
	position: absolute;
	left: 50%;
	top: 0;
	background-color: hsl(var(--gray-h) var(--gray-s-600) var(--gray-l-600) / 0.5);
	width: 1px;
	/* grow till the bottom of the next `Radix`, allows to have some extra length to accomodate to scroll shifts */
	height: calc(2 * 100% + 2em + var(--space-l));
	z-index: -1;
}